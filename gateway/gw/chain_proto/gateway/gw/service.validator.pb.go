// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package gw

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Transaction) Validate() error {
	for _, item := range this.Outs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Outs", err)
			}
		}
	}
	return nil
}
func (this *Output) Validate() error {
	return nil
}
func (this *Block) Validate() error {
	for _, item := range this.Transactions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Transactions", err)
			}
		}
	}
	return nil
}
func (this *Account) Validate() error {
	return nil
}
func (this *Peer) Validate() error {
	return nil
}

var _regex_GetTransactionByHashRequest_TxHash = regexp.MustCompile(`[0-9a-fA-F]{32}`)

func (this *GetTransactionByHashRequest) Validate() error {
	if !_regex_GetTransactionByHashRequest_TxHash.MatchString(this.TxHash) {
		return github_com_mwitkow_go_proto_validators.FieldError("TxHash", fmt.Errorf(`value '%v' must be a string conforming to regex "[0-9a-fA-F]{32}"`, this.TxHash))
	}
	return nil
}
func (this *PropagateTransactionRequest) Validate() error {
	if this.Transaction != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Transaction); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Transaction", err)
		}
	}
	return nil
}
func (this *GetTransactionResponse) Validate() error {
	if this.Transaction != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Transaction); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Transaction", err)
		}
	}
	return nil
}
func (this *GetTxsByBlockHashRequest) Validate() error {
	return nil
}
func (this *GetTxsByBlockHashResponse) Validate() error {
	for _, item := range this.Transactions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Transactions", err)
			}
		}
	}
	return nil
}
func (this *PropagateBlockRequest) Validate() error {
	if this.Block != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Block); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Block", err)
		}
	}
	return nil
}
func (this *GetBlockResponse) Validate() error {
	if this.Block != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Block); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Block", err)
		}
	}
	return nil
}
func (this *GetBlockByHashRequest) Validate() error {
	return nil
}
func (this *GetBlockByHeightRequest) Validate() error {
	return nil
}
func (this *GetBlocksRequest) Validate() error {
	return nil
}
func (this *GetBlocksResponse) Validate() error {
	for _, item := range this.Blocks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Blocks", err)
			}
		}
	}
	return nil
}
func (this *GetAccountRequest) Validate() error {
	return nil
}
func (this *GetAccountResponse) Validate() error {
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	return nil
}
func (this *ConnectResponse) Validate() error {
	for _, item := range this.Neighbours {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Neighbours", err)
			}
		}
	}
	return nil
}
func (this *SyncRequest) Validate() error {
	return nil
}
func (this *SyncResponse) Validate() error {
	for _, item := range this.Blocks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Blocks", err)
			}
		}
	}
	return nil
}
